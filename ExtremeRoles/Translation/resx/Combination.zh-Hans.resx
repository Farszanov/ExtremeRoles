<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AvalonsRoles" xml:space="preserve">
    <value>&lt;color=#FF1919FF&gt;阿&lt;/color&gt;瓦&lt;color=#00ffff&gt;隆&lt;/color&gt;</value>
  </data>
  <data name="Assassin" xml:space="preserve">
    <value>刺客</value>
  </data>
  <data name="Marlin" xml:space="preserve">
    <value>梅林</value>
  </data>
  <data name="AssassinHasOtherVision" xml:space="preserve">
    <value>刺客拥有独立视野</value>
  </data>
  <data name="AssassinVision" xml:space="preserve">
    <value>刺客视野</value>
  </data>
  <data name="AssassinApplyEnvironmentVisionEffect" xml:space="preserve">
    <value>受到照明破坏影响</value>
  </data>
  <data name="AssassinHasOtherKillCool" xml:space="preserve">
    <value>拥有独立击杀冷却</value>
  </data>
  <data name="AssassinKillCoolDown" xml:space="preserve">
    <value>击杀冷却</value>
  </data>
  <data name="AssassinHasOtherKillRange" xml:space="preserve">
    <value>拥有独立击杀范围</value>
  </data>
  <data name="AssassinKillRange" xml:space="preserve">
    <value>击杀范围</value>
  </data>
  <data name="AssassinHasTask" xml:space="preserve">
    <value>刺客持有任务</value>
  </data>
  <data name="AssassinCanKilled" xml:space="preserve">
    <value>刺客可以被击杀</value>
  </data>
  <data name="AssassinCanKilledFromCrew" xml:space="preserve">
    <value>刺客可以被船员阵营玩家击杀</value>
  </data>
  <data name="AssassinCanKilledFromNeutral" xml:space="preserve">
    <value>刺客可以被独立阵营玩家击杀</value>
  </data>
  <data name="AssassinCanSeeVote" xml:space="preserve">
    <value>刺客可以看到投票明细</value>
  </data>
  <data name="AssassinIsDeadForceMeeting" xml:space="preserve">
    <value>刺客死后强制开启会议</value>
  </data>
  <data name="AssassinCanSeeRoleBeforeFirstMeeting" xml:space="preserve">
    <value>刺客在第一次会议前可以看到所有人职业</value>
  </data>
  <data name="MarlinHasOtherVision" xml:space="preserve">
    <value>梅林拥有独立视野</value>
  </data>
  <data name="MarlinVision" xml:space="preserve">
    <value>梅林视野</value>
  </data>
  <data name="MarlinApplyEnvironmentVisionEffect" xml:space="preserve">
    <value>受到照明破坏影响</value>
  </data>
  <data name="MarlinHasTask" xml:space="preserve">
    <value>梅林拥有任务</value>
  </data>
  <data name="MarlinCanSeeAssassin" xml:space="preserve">
    <value>梅林可以看到刺客</value>
  </data>
  <data name="MarlinCanSeeVote" xml:space="preserve">
    <value>梅林可以看到投票明细</value>
  </data>
  <data name="MarlinCanSeeNeutral" xml:space="preserve">
    <value>梅林可以看到独立阵营玩家</value>
  </data>
  <data name="MarlinCanUseVent" xml:space="preserve">
    <value>梅林可以使用管道</value>
  </data>
  <data name="MarlinIntroDescription" xml:space="preserve">
    <value>你是全知全能的魔法师，带领船员走向胜利</value>
  </data>
  <data name="MarlinShortDescription" xml:space="preserve">
    <value>带领船员走向胜利，但要小心刺客</value>
  </data>
  <data name="MarlinFullDescription" xml:space="preserve">
    <value>梅林属于船员阵营。
梅林可以知道所有内鬼的身份。

·被动技能“一同出现”
梅林和刺客一同出现
如果游戏中没有刺客，则这个职业也不会出现。

·被动技能“要输一起输”
如果梅林被刺客刺杀，船员阵营失败。
梅林需要帮助好人主导会议进程，同时隐藏身份。

·其他注意事项
梅林的设置与内鬼职业相近。</value>
  </data>
  <data name="AssassinIntroDescription" xml:space="preserve">
    <value>找出知晓你们底细的魔法师，把他解决了</value>
  </data>
  <data name="AssassinShortDescription" xml:space="preserve">
    <value>找出梅林并刺杀</value>
  </data>
  <data name="AssassinFullDescription" xml:space="preserve">
    <value>刺客属于内鬼阵营。
刺客为内鬼阵营增加了新的胜利条件。

·被动技能“一同出现”
梅林和刺客一同出现。
如果游戏中没有梅林，则这个职业也不会出现。

·被动技能“特殊条件”
刺客需要用特殊能力放逐梅林。

·主动技能“特殊会议”
刺客的特殊能力：特别会议“谁是梅林？”。
所有人都参与会议，但刺客以外的玩家都不可以投票。
刺客不能跳过，可以给死人投票。
如果投票放逐的是梅林，则内鬼阵营获胜，否则游戏继续。
本技能激活条件：刺客被击杀或放逐。
除了上述技能外，刺客的能力与普通内鬼没有区别。</value>
  </data>
  <data name="whoIsMarine" xml:space="preserve">
    <value>谁是梅林？</value>
  </data>
  <data name="assassinateMarinSucsess" xml:space="preserve">
    <value>是梅林</value>
  </data>
  <data name="assassinateMarinFail" xml:space="preserve">
    <value>不是梅林</value>
  </data>
  <data name="HeroAca" xml:space="preserve">
    <value>&lt;color=#0086CC&gt;勇者&lt;/color&gt;&lt;color=#BAA7CC&gt;斗&lt;/color&gt;&lt;color=#FF1919FF&gt;魔王&lt;/color&gt;</value>
  </data>
  <data name="Hero" xml:space="preserve">
    <value>勇者</value>
  </data>
  <data name="Villain" xml:space="preserve">
    <value>魔王</value>
  </data>
  <data name="Vigilante" xml:space="preserve">
    <value>龙套</value>
  </data>
  <data name="HeroHasOtherVision" xml:space="preserve">
    <value>勇者拥有独立视野</value>
  </data>
  <data name="HeroVision" xml:space="preserve">
    <value>视野范围</value>
  </data>
  <data name="HeroApplyEnvironmentVisionEffect" xml:space="preserve">
    <value>受到照明破坏影响</value>
  </data>
  <data name="HeroAbilityCoolTime" xml:space="preserve">
    <value>勇者主角光环冷却</value>
  </data>
  <data name="HeroAbilityActiveTime" xml:space="preserve">
    <value>勇者发动主角光环所需时间</value>
  </data>
  <data name="HeroFeatKillPercentage" xml:space="preserve">
    <value>勇者外挂第二阶段发动所需的玩家死亡率</value>
  </data>
  <data name="HeroFeatButtonAbilityPercentage" xml:space="preserve">
    <value>勇者外挂第三阶段发动所需的玩家死亡率</value>
  </data>
  <data name="VillainHasOtherVision" xml:space="preserve">
    <value>魔王拥有独立视野</value>
  </data>
  <data name="VillainVision" xml:space="preserve">
    <value>视野范围</value>
  </data>
  <data name="VillainApplyEnvironmentVisionEffect" xml:space="preserve">
    <value>受到照明破坏影响</value>
  </data>
  <data name="VillainHasOtherKillCool" xml:space="preserve">
    <value>魔王拥有独立击杀冷却</value>
  </data>
  <data name="VillainKillCoolDown" xml:space="preserve">
    <value>击杀冷却</value>
  </data>
  <data name="VillainHasOtherKillRange" xml:space="preserve">
    <value>魔王拥有独立击杀范围</value>
  </data>
  <data name="VillainKillRange" xml:space="preserve">
    <value>击杀范围</value>
  </data>
  <data name="VillainAbilityCoolTime" xml:space="preserve">
    <value>魔王反派光环冷却</value>
  </data>
  <data name="VillainAbilityActiveTime" xml:space="preserve">
    <value>魔王发动反派光环所需时间</value>
  </data>
  <data name="VillainVigilanteSeeTime" xml:space="preserve">
    <value>龙套呼救时魔王发现龙套所需时间</value>
  </data>
  <data name="VigilanteHasOtherVision" xml:space="preserve">
    <value>龙套拥有独立视野</value>
  </data>
  <data name="VigilanteVision" xml:space="preserve">
    <value>视野范围</value>
  </data>
  <data name="VigilanteApplyEnvironmentVisionEffect" xml:space="preserve">
    <value>受到照明破坏影响</value>
  </data>
  <data name="VigilanteAbilityCoolTime" xml:space="preserve">
    <value>龙套呼救技能冷却</value>
  </data>
  <data name="VigilanteAbilityActiveTime" xml:space="preserve">
    <value>龙套呼救发动所需时间</value>
  </data>
  <data name="VigilanteAbilityCount" xml:space="preserve">
    <value>呼救可用次数</value>
  </data>
  <data name="VigilanteRange" xml:space="preserve">
    <value>呼救范围</value>
  </data>
  <data name="HeroIntroDescription" xml:space="preserve">
    <value>正义的勇者，参上</value>
  </data>
  <data name="HeroShortDescription" xml:space="preserve">
    <value>消灭魔王，成为英雄</value>
  </data>
  <data name="HeroFullDescription" xml:space="preserve">
    <value>勇者属于船员阵营。
其能力会随玩家的死亡逐渐增强。

·被动技能“开外挂”
勇者的"外挂"能力存在3个阶段：
第一阶段:如果1名玩家死亡，则勇者免疫来自内鬼的一切普通击杀。
第二阶段:如果一定数量以上的玩家死亡，勇者获得击杀能力。
第三阶段:如果一定数量以上的玩家死亡，获得主角光环技能。

·主动技能“主角光环”:
一段时间内，确认所有玩家的所在位置和距离。

·其他注意事项
特别地，当魔王尝试击杀勇者或勇者尝试击杀魔王时，二者一同死亡。</value>
  </data>
  <data name="VillainIntroDescription" xml:space="preserve">
    <value>最凶最恶的存在！</value>
  </data>
  <data name="VillainShortDescription" xml:space="preserve">
    <value>用深不见底的绝望统治整个飞船</value>
  </data>
  <data name="VillainFullDescription" xml:space="preserve">
    <value>魔王属于内鬼阵营。
魔王是最强大的内鬼。

·被动技能“魔王之刃”
魔王的击杀无视任何守护效果。
守护天使、保镖、时间之主的技能对于魔王全部失效。
魔王免疫来自船员阵营的一切击杀能力。

·主动技能“反派光环”:
一段时间内，确认所有玩家的所在位置和距离。

·其他注意事项
特别地，当魔王尝试击杀勇者或勇者尝试击杀魔王时，二者一同死亡。</value>
  </data>
  <data name="VigilanteIntroDescription" xml:space="preserve">
    <value>向所有人证明你才是真正的主角</value>
  </data>
  <data name="VigilanteShortDescription" xml:space="preserve">
    <value>向所有人揭露可笑的善恶</value>
  </data>
  <data name="VigilanteNewHeroForTheShipShortDescription" xml:space="preserve">
    <value>成为真正的正义</value>
  </data>
  <data name="VigilanteNewVillainForTheShipShortDescription" xml:space="preserve">
    <value>成为真正的邪恶</value>
  </data>
  <data name="VigilanteNewEnemyNeutralForTheShipShortDescription" xml:space="preserve">
    <value>成为这场游戏的主角</value>
  </data>
  <data name="VigilanteFullDescription" xml:space="preserve">
    <value>龙套属于独立阵营。
需要挣脱既定的命运，让自己成为游戏的主角。

·被动技能“额外的胜利条件”
基本胜利条件1:存活的玩家仅剩勇者、魔王与龙套。
基本胜利条件2:让魔王和勇者互杀而死，此时龙套可以跟随任何阵营一起获胜。

·被动技能“薛定谔的状态”
根据勇者和魔王的生存状况，龙套的状态会发生变化。
这段文本对应的状态为通常状态与基本胜利条件2达成后。
其他状态下，这段文本会发生改变。
根据龙套的状态，除了这个胜利条件以外还会产生追加胜利条件。
届时，这段文本也会产生变化。
若龙套状态从普通状态变化为其他状态，则无法恢复。

·主动技能“龙套体质”:
行动阶段，将附近一名玩家的位置给勇者确认。
这个技能发动过后一段时间，将自己发动技能时所处的位置给魔王确认。
这个状态下的龙套不会被勇者或魔王击杀。</value>
  </data>
  <data name="VigilanteCrewDescription" xml:space="preserve">
    <value>龙套属于独立阵营。
勇者死后，龙套与船员并肩作战。

·被动技能“额外的胜利条件”
追加胜利条件:船员阵营获胜。

·主动技能“龙套体质”:
行动阶段，将附近一名玩家的位置给勇者确认。
这个技能发动过后一段时间，将自己发动技能时所处的位置给魔王确认。
这个状态下的龙套不会被勇者或魔王击杀。</value>
  </data>
  <data name="VigilanteImpDescription" xml:space="preserve">
    <value>龙套属于独立阵营。
魔王死后，龙套与内鬼并肩作战。

·被动技能“额外的胜利条件”
这个状态下，龙套获得破坏与使用管道的能力。
追加胜利条件:内鬼阵营获胜。

·主动技能“龙套体质”:
行动阶段，将附近一名玩家的位置给勇者确认。
这个技能发动过后一段时间，将自己发动技能时所处的位置给魔王确认。
这个状态下的龙套不会被勇者或魔王击杀。</value>
  </data>
  <data name="VigilanteNeutDescription" xml:space="preserve">
    <value>龙套属于独立阵营。
不论是成为正义还是邪恶，现在都不值得了。
拿起屠刀，去做真正的主角。

·被动技能“额外的胜利条件”
追加胜利条件:杀死除自己以外的所有人。

·主动技能“龙套体质”:
行动阶段，将附近一名玩家的位置给勇者确认。
这个技能发动过后一段时间，将自己发动技能时所处的位置给魔王确认。
这个状态下的龙套失去击杀抗性。</value>
  </data>
  <data name="search" xml:space="preserve">
    <value>光环</value>
  </data>
  <data name="call" xml:space="preserve">
    <value>龙套体质</value>
  </data>
  <data name="InvestigatorOffice" xml:space="preserve">
    <value>&lt;color=#9E5C46&gt;大&lt;/color&gt;调查员&lt;color=#008A99&gt;探&lt;/color&gt;</value>
  </data>
  <data name="Investigator" xml:space="preserve">
    <value>调查员</value>
  </data>
  <data name="Assistant" xml:space="preserve">
    <value>助手</value>
  </data>
  <data name="InvestigatorApprentice" xml:space="preserve">
    <value>见习调查员</value>
  </data>
  <data name="InvestigatorHasOtherVision" xml:space="preserve">
    <value>调查员拥有独立视野</value>
  </data>
  <data name="InvestigatorVision" xml:space="preserve">
    <value>视野范围</value>
  </data>
  <data name="InvestigatorApplyEnvironmentVisionEffect" xml:space="preserve">
    <value>受到照明破坏影响</value>
  </data>
  <data name="InvestigatorSearchRange" xml:space="preserve">
    <value>调查员调查时与案发现场的最大距离</value>
  </data>
  <data name="InvestigatorSearchTime" xml:space="preserve">
    <value>调查所需时间</value>
  </data>
  <data name="InvestigatorSearchAssistantTime" xml:space="preserve">
    <value>调查员在助手支持下对案发现场进行1次调查所需的时间</value>
  </data>
  <data name="InvestigatorTextShowTime" xml:space="preserve">
    <value>调查结果显示时间</value>
  </data>
  <data name="AssistantHasOtherVision" xml:space="preserve">
    <value>助手拥有独立视野</value>
  </data>
  <data name="AssistantVision" xml:space="preserve">
    <value>助手的视野</value>
  </data>
  <data name="AssistantApplyEnvironmentVisionEffect" xml:space="preserve">
    <value>受到照明破坏影响</value>
  </data>
  <data name="InvestigatorApprenticeHasOtherVision" xml:space="preserve">
    <value>见习调查员拥有独立视野</value>
  </data>
  <data name="InvestigatorApprenticeVision" xml:space="preserve">
    <value>视野范围</value>
  </data>
  <data name="InvestigatorApprenticeApplyEnvironmentVisionEffect" xml:space="preserve">
    <value>受到照明破坏影响</value>
  </data>
  <data name="InvestigatorApprenticeAbilityCount" xml:space="preserve">
    <value>见习调查员紧急召集技能使用次数</value>
  </data>
  <data name="InvestigatorApprenticeAbilityCoolTime" xml:space="preserve">
    <value>紧急召集的冷却时间</value>
  </data>
  <data name="InvestigatorApprenticeAbilityActiveTime" xml:space="preserve">
    <value>见习调查员“紧急召集”按下紧急会议按钮的时间</value>
  </data>
  <data name="InvestigatorApprenticeHasOtherButton" xml:space="preserve">
    <value>见习调查员紧急召集的会议不计入紧急会议次数限制</value>
  </data>
  <data name="InvestigatorApprenticeHasOtherButtonNum" xml:space="preserve">
    <value>不计入次数限制的次数</value>
  </data>
  <data name="InvestigatorIntroDescription" xml:space="preserve">
    <value>真相只有一个</value>
  </data>
  <data name="InvestigatorShortDescription" xml:space="preserve">
    <value>调查案发现场留下的蛛丝马迹</value>
  </data>
  <data name="InvestigatorFullDescription" xml:space="preserve">
    <value>调查员属于船员阵营。
可以从案发现场搜寻线索。

·主动技能“尸检报告”
当有尸体被报告时，那尸体所在的地点直到下一轮会议阶段开始为止记录为案发现场。
调查员可以通过箭头确认案发现场的位置。
调查员在案发现场周围停留时，可以进行调查。
若调查员在调查过程中离开，调查进程会被重置。
通过调查得知的信息如下。
每一次的调查都需要一定的时间。
在第四次调查完成时，案发现场被移除。
第一次调查:死者死亡时刻。
第二次调查:从死者死亡到会议召开的间隔时间。
第三次调查:凶手的所属阵营。
第四次调查:凶手的职业。

·被动技能“助手的援助”
若尸体是助手报告的，则每次调查所需的时间将缩短。

·被动技能“传承”
调查员死亡等情况下，助手的职业变为见习调查员。</value>
  </data>
  <data name="AssistantIntroDescription" xml:space="preserve">
    <value>调查员的最佳搭档</value>
  </data>
  <data name="AssistantShortDescription" xml:space="preserve">
    <value>辅助调查员的行动</value>
  </data>
  <data name="AssistantFullDescription" xml:space="preserve">
    <value>助手属于船员阵营。
可以暗中帮助调查员。

·被动技能“尸检报告”
自己报告尸体的会议阶段开始时，助手可以在聊天框内确认尸体的死亡时间。

·被动技能“传承”
助手死亡时，调查员的职业变为见习调查员。</value>
  </data>
  <data name="InvestigatorApprenticeShortDescription" xml:space="preserve">
    <value>接过逝去的搭档的衣钵</value>
  </data>
  <data name="InvestigatorApprenticeFullDescription" xml:space="preserve">
    <value>见习调查员属于船员阵营。
见习调查员是由调查员或助手转变而来的。

·主动技能“尸检报告”
自己报告尸体的会议阶段开始时，见习调查员可以在聊天框内确认尸体的死亡时间。

·主动技能“紧急召集”:
可以打开紧急会议界面，远程召开紧急会议。
紧急会议界面不能持续开启。
如果紧急会议次数用完，即使见习调查员打开界面也不能召开紧急会议。
根据设置，该技能见习调查员可能共享紧急会议次数。
不过，在紧急会议次数耗尽的情况下，见习调查员仍然不能发动紧急会议。</value>
  </data>
  <data name="FindKillTime" xml:space="preserve">
    <value>死者好像是在{0} (UTC±0)被杀害的!</value>
  </data>
  <data name="FindReportTime" xml:space="preserve">
    <value>距离被害者死亡似乎过去了{0}秒!</value>
  </data>
  <data name="FindTeam" xml:space="preserve">
    <value>这里留下了{0}来过的线索!</value>
  </data>
  <data name="FindRole" xml:space="preserve">
    <value>从杀人手法来看，被害者似乎遭到了{0}的袭击!</value>
  </data>
  <data name="searchStrBase" xml:space="preserve">
    <value>正在调查案发现场。距离调查完成还有{0}秒!</value>
  </data>
  <data name="reportedDeadBodyInfo" xml:space="preserve">
    <value>发现的尸体似乎是在{0} (UTC±0)被杀害的!</value>
  </data>
  <data name="emergencyMeeting" xml:space="preserve">
    <value>紧急召集</value>
  </data>
  <data name="Lover" xml:space="preserve">
    <value>恋人</value>
  </data>
  <data name="LoverIsNeutral" xml:space="preserve">
    <value>恋人视为独立阵营</value>
  </data>
  <data name="LoverBecomNeutral" xml:space="preserve">
    <value>恋人可以加入独立阵营</value>
  </data>
  <data name="LoverDethWhenUnderAlive" xml:space="preserve">
    <value>恋人同生共死</value>
  </data>
  <data name="LoverHasOtherKillCool" xml:space="preserve">
    <value>拥有击杀能力的恋人拥有独立击杀冷却</value>
  </data>
  <data name="LoverKillCoolDown" xml:space="preserve">
    <value>击杀冷却</value>
  </data>
  <data name="LoverHasOtherKillRange" xml:space="preserve">
    <value>拥有击杀能力的恋人拥有独立击杀范围</value>
  </data>
  <data name="LoverKillRange" xml:space="preserve">
    <value>击杀范围</value>
  </data>
  <data name="LoverBecomeNeutralLoverHasOtherVision" xml:space="preserve">
    <value>作为独立阵营的恋人与船员拥有独立视野</value>
  </data>
  <data name="LoverBecomeNeutralLoverVision" xml:space="preserve">
    <value>视野范围</value>
  </data>
  <data name="LoverBecomeNeutralLoverApplyEnvironmentVisionEffect" xml:space="preserve">
    <value>作为独立阵营的恋人受到照明破坏影响</value>
  </data>
  <data name="LoverBecomeNeutralLoverCanUseVent" xml:space="preserve">
    <value>作为独立阵营的恋人可以使用管道</value>
  </data>
  <data name="LoverIntroDescription" xml:space="preserve">
    <value>你坠入了爱河</value>
  </data>
  <data name="LoverShortDescription" xml:space="preserve">
    <value>与恋人活到最后</value>
  </data>
  <data name="LoverFullDescription" xml:space="preserve">
    <value>恋人若干人一组。此外，你隶属船员阵营。

·被动技能“额外的胜利条件”
船员胜利时，恋人可以一同获胜，但恋人中的非船员阵营玩家不可以获胜。
若剩余的存活玩家全部在同一组恋人中，且这一组的所有玩家都完成了所有任务，恋人阵营获胜。
恋人中的非船员阵营玩家也可以通过这种方式获胜。
当以下所有条件都满足的场合：
①：剩余的存活玩家全部在同一组恋人中；
②：存活的内鬼数量为0；
③：恋人中存在非船员阵营的玩家； 
④：所有剩余存活玩家都属于船员阵营或③阵营，则同组的所有玩家直到人数达到一定数量为止自杀或者变成独立阵营。
可以设置需要达到的人数。</value>
  </data>
  <data name="LoverImposterFullDescription" xml:space="preserve">
    <value>恋人若干人一组。此外，你隶属内鬼阵营。

·被动技能“额外的胜利条件”
内鬼胜利时，恋人可以一同获胜，但恋人中的非内鬼阵营玩家不可以获胜。
若剩余的存活玩家全部在同一组恋人中，且这一组的所有玩家都完成了所有任务，恋人阵营获胜。
恋人中的非船员阵营玩家也可以通过这种方式获胜。
当以下所有条件都满足的场合：
①：剩余的存活玩家全部在同一组恋人中；
②：恋人中存在非船员阵营的玩家； 
③：所有剩余存活玩家都属于船员或内鬼阵营，则同组的所有玩家直到人数达到一定数量为止自杀或者变成独立阵营。
可以设置需要达到的人数。</value>
  </data>
  <data name="LoverNeutralFullDescription" xml:space="preserve">
    <value>恋人若干人一组。此外，你隶属独立阵营。

·被动技能“额外的胜利条件”
若剩余的存活玩家全部在同一组恋人中，且场上没有存活的拥有击杀能力的内鬼或独立阵营玩家，恋人阵营获胜。
当剩余的存活玩家全部在同一组恋人中，且这一组的所有玩家都完成了所有任务，则同组的所有玩家直到人数达到一定数量为止自杀。
可以设置需要达到的人数。</value>
  </data>
  <data name="LoverNeutralKillerFullDescription" xml:space="preserve">
    <value>因为所爱之人去世，满腔仇恨的你化为了杀人狂。你隶属独立阵营。
把所有其他玩家全部杀死，则你获得胜利。</value>
  </data>
  <data name="LoverKillerShortDescription" xml:space="preserve">
    <value>就用你们的命，为吾爱陪葬</value>
  </data>
  <data name="curLover" xml:space="preserve">
    <value>恋人</value>
  </data>
  <data name="LoverIntoPlus" xml:space="preserve">
    <value>是你的恋人</value>
  </data>
  <data name="Supporter" xml:space="preserve">
    <value>扈从</value>
  </data>
  <data name="EvilSupporter" xml:space="preserve">
    <value>邪恶的扈从</value>
  </data>
  <data name="NiceSupporter" xml:space="preserve">
    <value>正义的扈从</value>
  </data>
  <data name="SupporterIntroDescription" xml:space="preserve">
    <value>{0}是{1}
拥护他成为主导全船的人吧</value>
  </data>
  <data name="SupporterShortDescription" xml:space="preserve">
    <value>声援你的支持对象</value>
  </data>
  <data name="SupporterFullDescription" xml:space="preserve">
    <value>正义的扈从属于船员阵营。
需要拥护自己的支持对象。

·被动技能“服侍”
游戏开始时，扈从可以确认一名玩家的职业。
如果阿瓦隆模式开启，扈从将会确认梅林的职业(多个梅林的场合是随机选)，否则扈从将会随机确认一名船员阵营玩家的职业。

·你的侍主有关信息:
玩家名称: {0}。
职业: {1}。</value>
  </data>
  <data name="SupporterImposterFullDescription" xml:space="preserve">
    <value>邪恶的扈从属于内鬼阵营。
需要拥护自己的支持对象。

·被动技能“服侍”
游戏开始时，扈从可以确认一名玩家的职业。
如果阿瓦隆模式开启，扈从将会确认刺客的职业(多个刺客的场合是随机选)，否则扈从将会随机确认一名内鬼阵营玩家的职业。

你的侍主有关信息:
玩家名称: {0}。
职业: {1}。</value>
  </data>
  <data name="Sharer" xml:space="preserve">
    <value>羁绊者</value>
  </data>
  <data name="SharerSharerTellKill" xml:space="preserve">
    <value>共享击杀情况</value>
  </data>
  <data name="SharerIntroDescription" xml:space="preserve">
    <value>“最大的罪是假装忘记”</value>
  </data>
  <data name="SharerShortDescription" xml:space="preserve">
    <value>与其他羁绊者互通感知</value>
  </data>
  <data name="SharerFullDescription" xml:space="preserve">
    <value>羁绊者属于内鬼阵营。
所有羁绊者感官互通。

·被动技能“感官互通”
所有羁绊者能持续确认其他羁绊者的位置。
若“共享击杀情况”开启，一名羁绊者进行击杀时，其他所有羁绊者会得到通知。
此外，一名羁绊者由于职业变更而失去原有职业的场合，其他所有羁绊者会得到通知。</value>
  </data>
  <data name="curSharer" xml:space="preserve">
    <value>现在的羁绊者</value>
  </data>
  <data name="SharerIntoPlus" xml:space="preserve">
    <value>正与你共享感知</value>
  </data>
  <data name="sharerKill" xml:space="preserve">
    <value>羁绊网络: {0}感受到了杀戮的快感!</value>
  </data>
  <data name="Traitor" xml:space="preserve">
    <value>变节者</value>
  </data>
  <data name="TraitorAbilityCoolTime" xml:space="preserve">
    <value>破解冷却时间</value>
  </data>
  <data name="TraitorAbilityActiveTime" xml:space="preserve">
    <value>破解激活时间</value>
  </data>
  <data name="TraitorIntroDescription" xml:space="preserve">
    <value>叛变的{0}</value>
  </data>
  <data name="TraitorShortDescription" xml:space="preserve">
    <value>作为变节者毁灭这艘船</value>
  </data>
  <data name="TraitorFullDescription" xml:space="preserve">
    <value>变节者属于独立阵营.
是船员中的背叛者。

·被动技能“占用”
变节者会占据部分船员阵营的分配额。

·被动技能“额外的胜利条件”
若内鬼阵营及拥有击杀能力的独立阵营玩家全部死亡，且存活的玩家有半数以上属于同一阵营，则变节者获胜。
游戏开始时，随机将一名船员阵营玩家的职业更换为变节者。变节者保留原有船员职业的能力。

·主动技能“破解”
变节者每进行一次击杀后可以发动。
依次观看管理室地图、监控与生命监测装置。
生命检测装置不能在骷髅舰或米拉总部地图观看。

·你原先的职业信息：
原职业：{0}。</value>
  </data>
  <data name="traitorCracking" xml:space="preserve">
    <value>破解</value>
  </data>
  <data name="Kids" xml:space="preserve">
    <value>怨气化身</value>
  </data>
  <data name="Delinquent" xml:space="preserve">
    <value>怨气化身</value>
  </data>
  <data name="Wisp" xml:space="preserve">
    <value>怨气灵</value>
  </data>
  <data name="DelinquentHasOtherVision" xml:space="preserve">
    <value>拥有独立视野</value>
  </data>
  <data name="DelinquentVision" xml:space="preserve">
    <value>视野范围</value>
  </data>
  <data name="DelinquentApplyEnvironmentVisionEffect" xml:space="preserve">
    <value>受到照明破坏影响</value>
  </data>
  <data name="DelinquentRange" xml:space="preserve">
    <value>怨气化身自爆的爆炸范围</value>
  </data>
  <data name="DelinquentAbilityCoolTime" xml:space="preserve">
    <value>怨气化身鬼画符与自爆的技能冷却</value>
  </data>
  <data name="DelinquentAbilityCount" xml:space="preserve">
    <value>怨气化身自爆需要使用鬼画符的次数</value>
  </data>
  <data name="WispTorchAbilityNum" xml:space="preserve">
    <value>怨气灵鬼火的基础使用次数</value>
  </data>
  <data name="WispWinNum" xml:space="preserve">
    <value>怨气灵获胜所需影响人数的偏移值</value>
  </data>
  <data name="WispTorchNum" xml:space="preserve">
    <value>怨气灵可以放置的最大鬼火数</value>
  </data>
  <data name="WispTorchRange" xml:space="preserve">
    <value>扑灭鬼火的最大距离</value>
  </data>
  <data name="WispTorchActiveTime" xml:space="preserve">
    <value>鬼火持续时间</value>
  </data>
  <data name="WispBlackOutTime" xml:space="preserve">
    <value>鬼吹灯持续时间</value>
  </data>
  <data name="WispAbilityCoolTime" xml:space="preserve">
    <value>鬼火放置冷却</value>
  </data>
  <data name="WispIsReportAbility" xml:space="preserve">
    <value>鬼火放置后是否告知所有玩家</value>
  </data>
  <data name="DelinquentIntroDescription" xml:space="preserve">
    <value>我……好……冤……啊……</value>
  </data>
  <data name="DelinquentShortDescription" xml:space="preserve">
    <value>用咒怨的力量让飞船陷入恐惧</value>
  </data>
  <data name="DelinquentFullDescription" xml:space="preserve">
    <value>怨气化身属于独立阵营。
与怨气灵同为组合职业。

·主动技能“鬼画符”：
发动后，在原地留下一枚鬼画符。
鬼画符对所有玩家可见，但每名玩家看到的鬼画符样貌可能不同。
怨气化身每使用一次鬼画符，成为怨气灵时就能增加一次鬼火的使用次数。
怨气化身使用全部鬼画符后，其技能变为“自爆”。

·主动技能“自爆”：
全部鬼画符使用完毕后，技能范围内有其他玩家存在的场合才能发动。
使用后，击杀周围的所有玩家与怨气化身自己。

·被动技能“额外的胜利条件”：
怨气化身通过自爆炸死场上所有玩家，则怨气化身获胜。
若怨气化身没能通过这种方式获胜并且死亡，其职业变为“怨气灵”。</value>
  </data>
  <data name="scribble" xml:space="preserve">
    <value>鬼画符</value>
  </data>
  <data name="selfBomb" xml:space="preserve">
    <value>自爆</value>
  </data>
  <data name="WispShortDescription" xml:space="preserve">
    <value>用鬼火制造鬼吹灯来获得胜利</value>
  </data>
  <data name="WispFullDescription" xml:space="preserve">
    <value>怨气灵属于幽灵独立阵营职业，与怨气化身同为组合职业。
主动技能“鬼火”：
·发动后，当前游戏地图的出生点将出现一团鬼火
·当前地图有复数个出生点的场合，从那之中随机选择一个出生点出现鬼火
·鬼火在一定时间后消失，并触发“鬼吹灯”
·在鬼火附近按下使用按钮后，玩家就不会受到“鬼吹灯”的影响
技能“鬼吹灯”：
·对不受“鬼吹灯”影响的存活玩家以外的玩家生效
·触发的场合，玩家视野与船员阵营照明破坏期间的视野相同
当场上有{0}或更多玩家受到“鬼吹灯”影响时，怨气灵满足胜利条件，此时怨气灵可以与获胜阵营一同获胜
当前受“鬼吹灯”影响的玩家数：{1}人</value>
  </data>
  <data name="WispSetTorchButton" xml:space="preserve">
    <value>鬼火</value>
  </data>
  <data name="WispSetTorch" xml:space="preserve">
    <value>一股幽怨的邪念正在侵蚀灯光……</value>
  </data>
  <data name="scribeText" xml:space="preserve">
    <value>距离自爆还需要{0}个鬼画符。</value>
  </data>
  <data name="Buddy" xml:space="preserve">
    <value>挚友</value>
  </data>
  <data name="BuddyAwakeTaskGage" xml:space="preserve">
    <value>挚友觉醒需要完成的任务数</value>
  </data>
  <data name="BuddyIntroDescription" xml:space="preserve">
    <value>我们是最好的伙伴
与{0}成为了伙伴</value>
  </data>
  <data name="BuddyShortDescription" xml:space="preserve">
    <value>组成多人小队，共同进退</value>
  </data>
  <data name="BuddyFullDescription" xml:space="preserve">
    <value>挚友属于船员阵营，多人一组。
你的挚友：{0}。
若挚友中的一名玩家由于职业变化等原因失去挚友职业，其他挚友不会得知这一情况。</value>
  </data>
  <data name="Guesser" xml:space="preserve">
    <value>赌怪</value>
  </data>
  <data name="NiceGuesser" xml:space="preserve">
    <value>正义的赌怪</value>
  </data>
  <data name="EvilGuesser" xml:space="preserve">
    <value>邪恶的赌怪</value>
  </data>
  <data name="GuesserCanCallMeeting" xml:space="preserve">
    <value>赌怪可以召开会议</value>
  </data>
  <data name="GuesserGuessNum" xml:space="preserve">
    <value>赌怪最大猜测次数</value>
  </data>
  <data name="GuesserMaxGuessNumWhenMeeting" xml:space="preserve">
    <value>赌怪每轮会议最大猜测次数</value>
  </data>
  <data name="GuesserCanGuessNoneRole" xml:space="preserve">
    <value>赌怪可以不猜测职业进行赌杀</value>
  </data>
  <data name="GuesserGuessNoneRoleMode" xml:space="preserve">
    <value>直接赌杀</value>
  </data>
  <data name="BothGuesser" xml:space="preserve">
    <value>不论阵营都适用</value>
  </data>
  <data name="NiceGuesserOnly" xml:space="preserve">
    <value>只适用于正义的赌怪</value>
  </data>
  <data name="EvilGuesserOnly" xml:space="preserve">
    <value>只适用于邪恶的赌怪</value>
  </data>
  <data name="GuesserIntroDescription" xml:space="preserve">
    <value>生命就是豪赌</value>
  </data>
  <data name="GuesserShortDescription" xml:space="preserve">
    <value>推出其他玩家的职业并在会议中击杀</value>
  </data>
  <data name="GuesserFullDescription" xml:space="preserve">
    <value>赌怪属于船员或内鬼阵营。
可以在会议中通过猜测玩家职业来击杀其他玩家。

·主动技能“猜测”：
会议阶段选择一名玩家并猜测一个职业，若猜测正确则那名玩家死亡。
以下情况会导致猜测失败：
猜测的玩家是梅林、刺客或魔王。
猜测的玩家被保镖保护。
猜测一名已经觉醒职业的玩家为其觉醒前的职业。
猜测错误、失败的场合，赌怪死亡。</value>
  </data>
  <data name="guesserUiTitle" xml:space="preserve">
    <value>「{0}」的职业是？</value>
  </data>
  <data name="guesserUiInfo" xml:space="preserve">
    <value>剩余猜测次数：{0}/{1}次</value>
  </data>
  <data name="guesserConfirmMenu" xml:space="preserve">
    <value>你猜测{0}的职业是{1}
你确定吗？</value>
  </data>
  <data name="Mover" xml:space="preserve">
    <value>搬运工</value>
  </data>
  <data name="NiceMover" xml:space="preserve">
    <value>正义的搬运工</value>
  </data>
  <data name="EvilMover" xml:space="preserve">
    <value>邪恶的搬运工</value>
  </data>
  <data name="MoverAbilityCoolTime" xml:space="preserve">
    <value>搬运工搬运冷却</value>
  </data>
  <data name="MoverAbilityActiveTime" xml:space="preserve">
    <value>搬运工搬运持续时间</value>
  </data>
  <data name="MoverAbilityCount" xml:space="preserve">
    <value>搬运工技能最大使用次数</value>
  </data>
  <data name="MoverIntroDescription" xml:space="preserve">
    <value>搬运并布置飞船里的各类物件</value>
  </data>
  <data name="MoverShortDescription" xml:space="preserve">
    <value>搬运地图物件让局面对自己有利</value>
  </data>
  <data name="MoverFullDescription" xml:space="preserve">
    <value>搬运工属于船员或内鬼阵营。
可以搬运地图上的物件。

·主动技能“搬运”：
靠近地图上可以搬运的物件时才可以发动。
技能发动后，搬运工可以搬运那个物件。
玩家不可以与正在被搬运工搬运的物件进行交互。
搬运工不可以在技能持续期间进行召开紧急会议等交互。
若管道等物件是被使用的状态，搬运工将无法搬运该物件。</value>
  </data>
  <data name="Moving" xml:space="preserve">
    <value>搬运</value>
  </data>
  <data name="Accelerator" xml:space="preserve">
    <value>机关师</value>
  </data>
  <data name="NiceAccelerator" xml:space="preserve">
    <value>正义的机关师</value>
  </data>
  <data name="EvilAccelerator" xml:space="preserve">
    <value>邪恶的机关师</value>
  </data>
  <data name="AcceleratorAbilityCoolTime" xml:space="preserve">
    <value>加速带冷却时间</value>
  </data>
  <data name="AcceleratorAbilityActiveTime" xml:space="preserve">
    <value>加速带激活时间</value>
  </data>
  <data name="AcceleratorAbilityCount" xml:space="preserve">
    <value>加速带数量</value>
  </data>
  <data name="AcceleratorSpeed" xml:space="preserve">
    <value>加速带加速倍率</value>
  </data>
  <data name="AcceleratorUseOtherPlayer" xml:space="preserve">
    <value>加速带可加速他人的速度</value>
  </data>
  <data name="AcceleratorIntroDescription" xml:space="preserve">
    <value>这条道路,一方通行!!</value>
  </data>
  <data name="AcceleratorShortDescription" xml:space="preserve">
    <value>小心不要撞到墙了!!</value>
  </data>
  <data name="AcceleratorFullDescription" xml:space="preserve">
    <value>机关师属于船员或内鬼阵营。
可以放置加速带。

·主动技能“加速带”
可以使玩家加速或减速。
在加速带上顺着奔跑可以加速，如果逆着加速带奔跑将减速。</value>
  </data>
  <data name="AccelerateSet" xml:space="preserve">
    <value>加速带</value>
  </data>
  <data name="Skater" xml:space="preserve">
    <value>溜冰舞者</value>
  </data>
  <data name="NiceSkater" xml:space="preserve">
    <value>正义的溜冰舞者</value>
  </data>
  <data name="EvilSkater" xml:space="preserve">
    <value>邪恶的溜冰舞者</value>
  </data>
  <data name="SkaterAbilityCoolTime" xml:space="preserve">
    <value>溜冰冷却时间</value>
  </data>
  <data name="SkaterAbilityActiveTime" xml:space="preserve">
    <value>溜冰解除时间</value>
  </data>
  <data name="SkaterAbilityCount" xml:space="preserve">
    <value>溜冰可使用次数</value>
  </data>
  <data name="SkaterAcceleration" xml:space="preserve">
    <value>溜冰加速倍率</value>
  </data>
  <data name="SkaterMaxSpeed" xml:space="preserve">
    <value>溜冰最快速度</value>
  </data>
  <data name="SkaterFriction" xml:space="preserve">
    <value>溜冰摩擦力</value>
  </data>
  <data name="SkaterUseE" xml:space="preserve">
    <value>溜冰过程中撞到墙反弹</value>
  </data>
  <data name="SkaterEValue" xml:space="preserve">
    <value>溜冰过程中碰撞系数</value>
  </data>
  <data name="SkaterCanUseSpeed" xml:space="preserve">
    <value>溜冰过程中能否使用按钮</value>
  </data>
  <data name="SkaterIntroDescription" xml:space="preserve">
    <value>感受脚底生风的快感</value>
  </data>
  <data name="SkaterShortDescription" xml:space="preserve">
    <value>看得到我的车尾灯吗？</value>
  </data>
  <data name="SkaterFullDescription" xml:space="preserve">
    <value>溜冰舞者属于船员或内鬼阵营。
溜冰舞者是使用技能移速最快的职业。

·主动技能“溜冰”
感受脚底生风的快感。
溜冰时你不能立即停止或转弯，根据设置你撞到墙将反弹。
到一定速度以上时，无法使用使用按钮等其他操作。</value>
  </data>
  <data name="SkaterSkateOn" xml:space="preserve">
    <value>溜冰</value>
  </data>
  <data name="SkaterSkateOff" xml:space="preserve">
    <value>刹车</value>
  </data>
  <data name="InvestigatorContinueSearch" xml:space="preserve">
    <value>能否继续调查犯罪现场</value>
  </data>
  <data name="InvestigatorSearchCanFindName" xml:space="preserve">
    <value>能否通过犯罪现场调查出凶手</value>
  </data>
  <data name="InvestigatorForceMeetingOnSearchEnd" xml:space="preserve">
    <value>调查完犯罪现场后强行开启会议</value>
  </data>
  <data name="InvestigatorSearchCanContineMeetingNum" xml:space="preserve">
    <value>剩余的关于犯罪现场的会议数</value>
  </data>
  <data name="Barter" xml:space="preserve">
    <value>奇迹商人</value>
  </data>
  <data name="NiceBarter" xml:space="preserve">
    <value>正义的奇迹商人</value>
  </data>
  <data name="EvilBarter" xml:space="preserve">
    <value>邪恶的奇迹商人</value>
  </data>
  <data name="BarterAwakeTaskRate" xml:space="preserve">
    <value>正义的奇迹商人知晓职业所需任务数量(条件1)</value>
  </data>
  <data name="BarterAwakeDeadPlayerNum" xml:space="preserve">
    <value>正义的奇迹商人知晓职业所需死亡人数(条件2)</value>
  </data>
  <data name="BarterAwakeKillNum" xml:space="preserve">
    <value>邪恶的奇迹商人知晓职业所需击杀数</value>
  </data>
  <data name="BarterCanCallMeeting" xml:space="preserve">
    <value>奇迹商人能否开启会议</value>
  </data>
  <data name="BarterCastlingNum" xml:space="preserve">
    <value>奇迹商人每次会议可进行的交换数</value>
  </data>
  <data name="BarterMaxCastlingNumWhenMeeting" xml:space="preserve">
    <value>奇迹商人总共可进行的交换数</value>
  </data>
  <data name="BarterRandomCastling" xml:space="preserve">
    <value>奇迹商人的阵营随机</value>
  </data>
  <data name="BarterOneCastlingNum" xml:space="preserve">
    <value>随机交换
使用次数</value>
  </data>
  <data name="BarterShowCastlingOther" xml:space="preserve">
    <value>他人是否会知晓谁被交换了</value>
  </data>
  <data name="BarterFullDescription" xml:space="preserve">
    <value>可以交换两人的票的职业

会议能力“交换”
   -选择玩家发动
   -可以交换两人的票数</value>
  </data>
  <data name="BarterShortDescription" xml:space="preserve">
    <value>用交换把会议搞得翻天覆地吧！</value>
  </data>
  <data name="BarterIntroDescription" xml:space="preserve">
    <value>票的去向？看我的心情吧</value>
  </data>
  <data name="BarterCastlingInfo" xml:space="preserve">
    <value>剩余可交换次数：{0}次
这次会议可交换{1}次</value>
  </data>
  <data name="BarterRandomCastling" xml:space="preserve">
    <value>随机交换
使用次数</value>
  </data>
</root>